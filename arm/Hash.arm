
MainHash_Create:
                stp  x21, x30, [sp, -16]!
                stp  x26, x27, [sp, -16]!
               _lea  x21, mainHash
                mov  w26, 16            ; initial size in MiB
                lsl  x26, x26, 20 - 5   ; cluster count
                lsl  x1, x26, 5         ; number of bytes
                 bl  Os_VirtualAlloc
                str  x0, [x21, MainHash.table]
                str  x26, [x21, MainHash.clusterCount]
                str  xzr, [x21, MainHash.lpSize]
               strb  wzr, [x21, MainHash.date]
                ldp  x26, x27, [sp], 16
                ldp  x21, x30, [sp], 16
                ret


MainHash_ReadOptions:
                stp  x29, x30, [sp, -16]!
                stp  x20, x21, [sp, -16]!
                stp  x26, x27, [sp, -16]!
               _lea  x29, mainHash
               _lea  x20, options
                ldr  w26, [x20, Options.hash]
                lsl  x26, x26, 20 - 5
        ; x26 = newClusterCount
                ldr  x27, [x29, MainHash.lpSize]
              ldrsb  w21, [x20, Options.largePages]
                ldr  w4, [x29, MainHash.clusterCount]
                cmp  w26, w4
                bne  .NoMatch
                tst  x27, x27
               cset  w0, eq
                eor  w0, w0, w21
               tbnz  w0, 0, .Skip
.NoMatch:
                 bl  MainHash_Free
                lsl  x1, x26, 5
        ; x1 = number of bytes in hash table
                cbz  w21, .NoLP
.LP:
                 bl  Os_VirtualAlloc_LargePages
               cbnz  x0, .Done
.NoLP:
                 bl  Os_VirtualAlloc
                mov  x2, 0
.Done:
                str  x0, [x29, MainHash.table]
                str  x26, [x29, MainHash.clusterCount]
                str  x2, [x29, MainHash.lpSize]
               strb  wzr, [x29, MainHash.date]
                 bl  MainHash_DisplayInfo
.Skip:
                ldp  x26, x27, [sp], 16
                ldp  x20, x21, [sp], 16
                ldp  x29, x30, [sp], 16
                ret


MainHash_DisplayInfo:
                stp  x27, x30, [sp, -16]!
                sub  sp, sp, 64
               _lea  x27, Output
               _lea  x6, mainHash
                ldr  x0, [x6, MainHash.clusterCount]
                lsr  x0, x0, 20 - 5
                ldr  x1, [x6, MainHash.lpSize]
               _lea  x2, LargePageMinSize
                ldr  x2, [x2]
                stp  x0, x2, [sp]
                adr  x3, .nolp
                adr  x4, .yeslp
                tst  x1, x1
               csel  x1, x3, x4, eq
                add  x2, sp, 0
                mov  x3, 0
                 bl  PrintFancy
                 bl  WriteLine_Output
                add  sp, sp, 64
                ldp  x27, x30, [sp], 16
                ret
.nolp:
        db 'info string hash set to %u0 MB no large pages', 10, 0
.yeslp:
        db 'info string hash set to %u0 MB page size %u1 KB', 10, 0
        balign 4


MainHash_Clear:
               _lea  x0, mainHash
                ldr  x1, [x0, MainHash.clusterCount]
                ldr  x17, [x0, MainHash.table]
                lsl  x1, x1, 2  ; 4 qwords in a cluster, qword = 8 bytes
                mov  x0, 0
                  b  RepStosq


MainHash_Destroy:
MainHash_Free:
                stp  x29, x30, [sp, -16]!
               _lea  x29, mainHash
                ldr  x1, [x29, MainHash.table]
                ldr  x0, [x29, MainHash.lpSize]
                ldr  w2, [x29, MainHash.clusterCount]
                lsl  x2, x2, 5
                tst  x0, x0
               csel  x2, x0, x2, ne
                 bl  Os_VirtualFree
                str  xzr, [x29, MainHash.table]
                str  xzr, [x29, MainHash.lpSize]
                str  xzr, [x29, MainHash.clusterCount]
                ldp  x29, x30, [sp], 16
                ret

MainHash_HashFull:
               _lea  x6, mainHash
                mov  w0, 0
                ldr  x8, [x6, MainHash.table]
               ldrb  w4, [x6, MainHash.date]
                mov  w5, 32*(1000/3)
                add  x9, x8, x5
.NextCluster:
               ldrb  w1, [x8, 8*0 + MainHashEntry.genBound]
               ldrb  w2, [x8, 8*1 + MainHashEntry.genBound]
               ldrb  w3, [x8, 8*2 + MainHashEntry.genBound]
                eor  w1, w1, w4
                eor  w2, w2, w4
                eor  w3, w3, w4
                add  x8, x8, 32
               ands  w1, w1, -4
               cinc  w0, w0, eq
               ands  w2, w2, -4
               cinc  w0, w0, eq
               ands  w3, w3, -4
               cinc  w0, w0, eq
                cmp  x8, x9
                blo  .NextCluster
                ret

